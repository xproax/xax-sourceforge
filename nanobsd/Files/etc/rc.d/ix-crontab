#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-crontab
# REQUIRE: LOGIN
# BEFORE: cron

. /etc/rc.subr

generate_crontab()
{
    local IFS=\|
    local minute hour daymonth month dayweek user command
    mount -uw /
    cp /conf/base/etc/crontab /etc/crontab
    # Generate cronjobs
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT cron_minute,cron_hour,cron_daymonth,cron_month,cron_dayweek,cron_user,cron_command FROM services_cronjob ORDER BY id" | \
	while read minute hour daymonth month dayweek user command; do
        echo -e "${minute}\t${hour}\t${daymonth}\t${month}\t${dayweek}\t${user}\t${command} >/dev/null 2>&1" >> /etc/crontab
    done

    # Gnerate rsync
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT rsync_path,rsync_minute,rsync_hour,rsync_daymonth,rsync_month,rsync_dayweek,rsync_user,rsync_remotehost,rsync_remotedir,rsync_recursive,rsync_times,rsync_compress,rsync_archive,rsync_delete,rsync_quiet,rsync_preserveperm,rsync_preserveattr,rsync_extra FROM services_rsync ORDER BY id" | \
	while read path minute hour daymonth month dayweek user host dir recursive times compress archive delete quiet preserveperm preserveattr extra; do
        command=$(

            echo -n "lockf -s -t 0 -k /mnt rsync "

            if [ ${recursive} -gt 0 ]; then
                echo -n "-r "
            fi

            if [ ${times} -gt 0 ]; then
                echo -n "-t "
            fi

            if [ ${compress} -gt 0 ]; then
                echo -n "-z "
            fi

            if [ ${archive} -gt 0 ]; then
                echo -n "-a "
            fi

            if [ ${delete} -gt 0 ]; then
                echo -n "--delete "
            fi

            if [ ${preserveperm} -gt 0 ]; then
                echo -n "-p "
            fi

            if [ ${preserveattr} -gt 0 ]; then
                echo -n "-X "
            fi

            echo -n "${extra} "

            echo -n "${path} ${host}:${dir}"

            if [ ${quiet} -gt 0 ]; then
                echo -n " >/dev/null 2>&1"
            fi

        )
        echo -e "${minute}\t${hour}\t${daymonth}\t${month}\t${dayweek}\t${user}\t${command}" >> /etc/crontab
    done
    mount -ur /
}

original_crontab()
{
    mount -uw /
    cp /conf/base/etc/crontab /etc/crontab
    mount -ur /

}

name="ix-crontab"
start_cmd='generate_crontab'
stop_cmd='original_crontab'

load_rc_config $name
run_rc_command "$1"
