#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-fstab
# BEFORE: fsck

. /etc/rc.subr

#
# Generate fstab right before mountlate.
#
generate_fstab_real()
{
	local IFS=\|
	local fstype volumename newmp mountpoint mpoptions device fs

	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "
		SELECT
			v.vol_fstype,
			v.vol_name,
			mp.mp_path,
			mp.mp_options

		FROM
			storage_volume as v

		LEFT OUTER JOIN
			storage_mountpoint as mp
		ON
			v.id = mp.mp_volume_id

		WHERE
			v.vol_fstype in ('UFS', 'NTFS', 'MSDOSFS', 'EXT2FS')
	" | \
	while read fstype volumename newmp mpoptions; do
		case "${fstype}" in
			UFS) device="/dev/ufs/${volumename}"; fs="ufs" ;;
			NTFS) device="/dev/ntfs/${volumename}"; fs="ntfs" ;;
			EXT2FS) device="/dev/ext2fs/${volumename}"; fs="ext2fs" ;;
			MSDOSFS) vname=$(echo ${volumename}|tr '[:lower:]' '[:upper:]')
				device="/dev/msdosfs/${vname}"; fs="msdosfs" ;;
		esac

		if [ -c "${device}" ]; then
			if [ -z "${newmp}" ]; then
				mountpoint=/mnt/${volumename}
			else
				mountpoint=${newmp}
			fi

			mkdir -p ${mountpoint}
			echo "${device}	${mountpoint}	${fs}	${mpoptions},late	2	2"
		fi
	done
}

generate_fstab_swap()
{
	local IFS=\|
	local encrypted_swap swap_suffix
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_identifier FROM storage_disk" | \
	while read identifier; do
        devname=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py swap_from_identifier "${identifier}")
        if [ -n "${devname}" ]; then
       	    echo "/dev/${devname}	none			swap		sw		0	0"
        fi 
	done
}

generate_fstab()
{
	local _doumount=0

	# If we're running really early, then mount /data read-only
	if [ ! -f ${FREENAS_CONFIG} ]; then
		mount -o ro /data
		_doumount=1
	fi
	cp /conf/base/etc/fstab /etc/fstab
	generate_fstab_real >> /etc/fstab
	generate_fstab_swap >> /etc/fstab
	if [ "${_doumount}" -eq 1 ]; then
		umount /data
	fi
}

name="ix-fstab"
start_cmd='generate_fstab'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
