#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-fstab
# BEFORE: fsck

. /etc/rc.subr

#
# Generate fstab right before mountlate.
#
generate_fstab_real()
{
	local IFS=\|

	local volumename newmp mountpoint
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT v.vol_name, mp.mp_path FROM storage_volume AS v LEFT OUTER JOIN storage_mountpoint AS mp ON v.id = mp.mp_volume_id WHERE v.vol_fstype = 'UFS'" | \
	while read volumename newmp; do
		if [ -c "/dev/ufs/${volumename}" ]; then
			if [ -z "${newmp}" ]; then
				mountpoint=/mnt/${volumename}
			else
				mountpoint=${newmp}
			fi
			mkdir -p ${mountpoint}
			echo "/dev/ufs/${volumename}		${mountpoint}			ufs		rw,late	2	2"
		fi
	done

	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT v.vol_name, mp.mp_path FROM storage_volume AS v LEFT OUTER JOIN storage_mountpoint AS mp ON v.id = mp.mp_volume_id WHERE v.vol_fstype = 'NTFS'" | \
	while read volumename newmp; do
		if [ -c "/dev/ntfs/${volumename}" ]; then
			if [ -z "${newmp}" ]; then
				mountpoint=/mnt/${volumename}
			else
				mountpoint=${newmp}
			fi
			mkdir -p ${mountpoint}
			echo "/dev/ntfs/${volumename}		${mountpoint}			ntfs-3g		rw,late	2	2"
		fi
	done

	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT v.vol_name, mp.mp_path FROM storage_volume AS v LEFT OUTER JOIN storage_mountpoint AS mp ON v.id = mp.mp_volume_id WHERE v.vol_fstype = 'MSDOSFS'" | \
	while read volumename newmp; do
            vname=$(echo ${volumename}|tr '[:lower:]' '[:upper:]')
		if [ -c "/dev/msdosfs/${vname}" ]; then
			if [ -z "${newmp}" ]; then
				mountpoint=/mnt/${volumename}
			else
				mountpoint=${newmp}
			fi
			mkdir -p ${mountpoint}
			echo "/dev/msdosfs/${vname}		${mountpoint}			msdosfs		rw,late	2	2"
		fi
	done
}

generate_fstab_swap()
{
	local IFS=\|
	local encrypted_swap swap_suffix
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_identifier FROM storage_disk" | \
	while read identifier; do
        devname=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py swap_from_identifier "${identifier}")
        if [ -n "${devname}" ]; then
       	    echo "/dev/${devname}	none			swap		sw		0	0"
        fi 
	done
}

generate_fstab()
{
	local _doumount=0

	# If we're running really early, then mount /data read-only
	if [ ! -f ${FREENAS_CONFIG} ]; then
		mount -o ro /data
		_doumount=1
	fi
	cp /conf/base/etc/fstab /etc/fstab
	generate_fstab_real >> /etc/fstab
	generate_fstab_swap >> /etc/fstab
	if [ "${_doumount}" -eq 1 ]; then
		umount /data
	fi
}

name="ix-fstab"
start_cmd='generate_fstab'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
