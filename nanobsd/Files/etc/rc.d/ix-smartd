#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-smartd
# REQUIRE: FILESYSTEMS
# BEFORE: smartd

. /etc/rc.subr

: ${smartd_config="/usr/local/etc/smartd.conf"}

generate_smartd_cfg()
{
    local IFS=\|
    cat <<EOF
################################################
# smartd.conf generated by FreeNAS
################################################
EOF
    local mode diff info crit email
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT smart_powermode, smart_difference, smart_informal, smart_critical, smart_email FROM services_smart ORDER by -id LIMIT 1" |
    while read mode diff info crit email; do

        local ident opts type hour daymonth month dayweek
        ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_identifier, disk_smartoptions, smarttest_type, smarttest_hour, smarttest_daymonth, smarttest_month, smarttest_dayweek FROM storage_disk d LEFT JOIN system_smarttest s ON d.id=s.smarttest_disk_id WHERE disk_togglesmart=1" |
        while read ident opts type hour daymonth month dayweek; do
            disk=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py identifier_to_device "${ident}")
            case "$disk" in
            None|*zvol*)
                continue
                ;;
            esac
            echo -n "/dev/${disk}"
            echo -n " -n ${mode}"
            echo -n " -W ${diff},${info},${crit}"
            if [ -n "${email}" ]; then
                echo -n " -m ${email}"
            fi
            if [ -n "${type}" ]; then

            nhour=$(echo "${hour}"|tr -s "," "|"|awk '{if($NF != "..") printf "(%s)", $NF; else printf $NF }')
            ndayweek=$(echo "${dayweek}"|tr -s "," "|"|awk '{if($NF != "..") printf "(%s)", $NF; else printf $NF }')
            nmonth=$(echo "${month}"|tr -s "," "|"|awk '{if($NF != "..") printf "(%s)", $NF; else printf $NF }')
            ndaymonth=$(echo "${daymonth}"|tr -s "," "|"|awk '{if($NF != "..") printf "(%s)", $NF; else printf $NF }')
            echo -n " -s ${type}/${nmonth}/${ndaymonth}/${ndayweek}/${nhour}"
            fi
            echo " $opts"
        done
    done
}

generate_smartd()
{
	generate_smartd_cfg > ${smartd_config}
}

name=ix-smartd
start_cmd=generate_smartd
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
