#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-ups
# REQUIRE: FILESYSTEMS
# BEFORE: nut

. /etc/rc.subr

UPS_CONFPATH="/usr/local/etc/nut"
UPS_CONFIG="${UPS_CONFPATH}/ups.conf"
UPS_MONFILE="${UPS_CONFPATH}/upsmon.conf"
UPS_USERSFILE="${UPS_CONFPATH}/upsd.users"
UPS_DAEMONFILE="${UPS_CONFPATH}/upsd.conf"
UPS_VARPATH="/var/db/nut"

generate_ups()
{
    local IFS=\|
    local f="id ups_identifier ups_driver ups_port ups_description"
    eval local $f
    local cmd sf cfg
    sf=$(echo $f | sed -e 's/ /, /g')
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT $sf FROM services_ups ORDER BY -id LIMIT 1" | \
	while eval read $f; do
	    cat <<EOF
[${ups_identifier}]
    driver = $(echo "${ups_driver}"|tr -s " " "\n")
    port = ${ups_port}
    desc = "${ups_description}"
EOF
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
    "SELECT ups_options FROM services_ups WHERE id = ${id}"
    done
}

generate_upsmon()
{
    local IFS=\|
    local f="ups_identifier ups_shutdown ups_shutdowntimer ups_emailnotify ups_toemail ups_subject ups_masterpwd"
    eval local $f
    local cmd sf cfg
    sf=$(echo $f | sed -e 's/ /, /g')
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT $sf FROM services_ups ORDER BY -id LIMIT 1" | \
	while eval read $f; do
        cat > /var/tmp/nut_notify.sh << EOF
#!/bin/bash
EOF
        if [ "${ups_emailnotify}" -eq 1 ]; then
            cat >> /var/tmp/nut_notify.sh << EOF
echo \$1 | mail -s "\$(echo "${ups_subject}"|sed "s/%d/\$(date)/"|sed "s/%h/\$(hostname)/")" "${ups_toemail}"
EOF
        fi
        if [ "${ups_shutdown}" = "batt" ]; then
            cat >> /var/tmp/nut_notify.sh << EOF
if [ "\${NOTIFYTYPE}" = "ONBATT" ]; then
    shutdown -p now "\$1"
fi
EOF
        fi
        chmod +x /var/tmp/nut_notify.sh
	    cat <<EOF
FINALDELAY ${ups_shutdowntimer}
MONITOR ${ups_identifier} 1 upsmon ${ups_masterpwd} master
NOTIFYCMD "/var/tmp/nut_notify.sh"
NOTIFYFLAG ONBATT SYSLOG+WALL+EXEC
NOTIFYFLAG LOWBATT SYSLOG+WALL+EXEC
SHUTDOWNCMD "/sbin/shutdown -p now"
EOF

    done
}

generate_upsdusers()
{

    local passwd=$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
    "SELECT ups_masterpwd FROM services_ups ORDER BY -id LIMIT 1")
	    cat <<EOF
[upsmon]
    password = ${passwd}
    upsmon master

EOF

    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
    "SELECT ups_extrausers FROM services_ups ORDER BY -id LIMIT 1"

}

generate_upsd()
{

    local IFS=\|
    local f="ups_rmonitor"
    eval local $f
    local cmd sf cfg
    sf=$(echo $f | sed -e 's/ /, /g')
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT $sf FROM services_ups ORDER BY -id LIMIT 1" | \
	while eval read $f; do
        if [ "${ups_rmonitor}" -eq 1 ]; then
	        echo "LISTEN 0.0.0.0"
        else
	        echo "LISTEN 127.0.0.1"
        fi
    done

}

generate_ups_conf()
{
    mkdir -p ${UPS_CONFPATH}
    mkdir -p ${UPS_VARPATH}
    generate_ups > ${UPS_CONFIG}
    generate_upsmon > ${UPS_MONFILE}
    generate_upsdusers > ${UPS_USERSFILE}
    generate_upsd > ${UPS_DAEMONFILE}
    chown root:uucp ${UPS_VARPATH} ${UPS_CONFIG} ${UPS_MONFILE} ${UPS_USERSFILE} ${UPS_DAEMONFILE}
    chmod 440 ${UPS_CONFIG} ${UPS_MONFILE} ${UPS_USERSFILE} ${UPS_DAEMONFILE}
    chmod g=rwx,o= ${UPS_VARPATH}
}

name="ix-ups"
start_cmd='generate_ups_conf'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
