#!/bin/sh
#
# Copyright (c) 2004-2005 Poul-Henning Kamp.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $FreeBSD: stable/8/tools/tools/nanobsd/gateworks/Files/root/updatep1 189084 2009-02-26 19:44:52Z sam $
#
# Script to update partition 1 on a NanoBSD system.
#
# usage:
#	ssh somewhere cat image.s1 | sh updatep1
#

PARTNUM=1
OTHER_PARTNUM=2

set -e

. /etc/nanobsd.conf

if mount | grep ${NANO_DRIVE}s$PARTNUM > /dev/null ; then
	echo "You are running partition $PARTNUM already"
	echo "you probably want to use 'updatep$OTHER_PARTNUM' instead"
	exit 1
fi

LABELNAME=`echo ${NANO_DRIVE} | cut -f2 -d/`
TARGET_DRIVE=`glabel status | awk '/ufs\/'${LABELNAME}s${OTHER_PARTNUM}a/' { print $3; }' | sed -e s,s${OTHER_PARTNUM}a,,`

# Blow away old system.
dd if=/dev/zero of=/dev/${TARGET_DRIVE}s$PARTNUM bs=1m count=1 > /dev/null 2>&1

# Copy in new system
dd of=/dev/${TARGET_DRIVE}s$PARTNUM obs=128k

# Check that it worked
fsck_ffs -n /dev/${TARGET_DRIVE}s${PARTNUM}a
tunefs -L ${LABELNAME}s${PARTNUM}a /dev/${TARGET_DRIVE}s${PARTNUM}a

# Save all files which exist under / that should persist across upgrades (root
# ssh keys, /boot/loader.user, /boot/modules/* , fusionio utilities, etc).
if [ -e /tmp/upgrade ]; then
    if [ ! -d /tmp/upgrade ]; then
        rm -rf /tmp/upgrade
        mkdir /tmp/upgrade
    fi
else
    mkdir /tmp/upgrade
fi

mount /dev/${TARGET_DRIVE}s${PARTNUM}a /tmp/upgrade

if [ -f /boot/loader.user ]; then
    cp /boot/loader.user /tmp/upgrade/boot/
fi

if [ -d /root/.ssh ]; then
    cp -R /root/.ssh /tmp/upgrade/root/ && chmod 700 /tmp/upgrade/root/.ssh
fi

if [ -d /usr/local/fusionio ]; then
    cp -R /usr/local/fusionio /tmp/upgrade/usr/local/
fi  

if [ -d /boot/modules ]; then
    if [ ! -d /tmp/upgrade/boot/modules ]; then
        mkdir /tmp/upgrade/boot/modules
    fi  
    for i in `ls /boot/modules/`
    do  
        cp /boot/modules/$i /tmp/upgrade/boot/modules/
    done
fi  

umount /tmp/upgrade
rmdir /tmp/upgrade


gpart set -a active -i $PARTNUM ${TARGET_DRIVE}
