#!/bin/sh
#
# REQUIRE: nmbd smbd
# REQUIRE: winbindd
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
#samba_enable="YES"
# or, for fine grain control:
#nmbd_enable="YES"
#smbd_enable="YES"
# You can enable winbindd separately, by adding:
#winbindd_enable="YES"
# or by adding the 'idmap uid' directive to smb.conf .
#
# Configuration file can be set with:
#samba_config="/usr/local/etc/smb.conf"

name="samba"
desc="Samba service"
: ${samba_enable=NO}

. /usr/local/etc/rc.samba

rcvar=$(set_rcvar)

samba_daemons="smbd nmbd"
samba_daemons="$samba_daemons winbindd"

start_precmd="samba_start_precmd"
restart_precmd="samba_checkconfig"
reload_precmd="samba_checkconfig"

reload_cmd="samba_daemons_command"
restart_cmd="samba_daemons_command"
start_cmd="samba_daemons_command"
status_cmd="samba_daemons_command"
stop_cmd="samba_daemons_command"

samba_start_precmd()
{
	local file

	# XXX: Never delete winbindd_idmap, winbindd_cache and group_mapping
	echo -n "Removing stale Samba tdb files: "
	for file in brlock.tdb browse.dat connections.tdb gencache.tdb \
		    locking.tdb messages.tdb namelist.debug sessionid.tdb \
		    unexpected.tdb
	do
		rm "${samba_lockdir}/${file}" </dev/null \
		    2>/dev/null && echo -n '.'
	done
	echo " done"
}

samba_daemons_command()
{
	local rc service

	if [ $rc_arg = "stop" ]; then
		samba_daemons=$(reverse_list $samba_daemons)
	fi
	for service in $samba_daemons; do
		env samba_standalone_daemon=0 service $service \
		    ${_rc_prefix}${rc_arg} ${rc_extra_args}
		if [ $? -ne 0 ]; then
			rc=1
		fi
	done
	return $rc
}

run_rc_command "$1"
